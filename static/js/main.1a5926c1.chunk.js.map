{"version":3,"sources":["custom-hooks.js","components/SearchInput.js","components/Sentinel.js","components/List.js","App.js","index.js"],"names":["useObserver","_ref","target","onIntersect","useEffect","observer","IntersectionObserver","observe","current","unobserve","useDataLoader","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","counter","setCounter","loadInitial","n","list","toConsumableArray","Array","map","_","index","length","loadMore","concat","useSearch","_useState5","_useState6","query","setQuery","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","clearSearch","setClearSearch","searchQuery","q","isNaN","includes","parseFloat","Math","floor","parseInt","searchFlag","useInputValue","initialValue","arguments","undefined","_useState11","_useState12","inputValue","setInputValue","changeInput","e","value","keyInput","callback","which","keyCode","SearchInputWrapper","styled","div","_templateObject","StyledForm","form","_templateObject2","StyledInput","input","_templateObject3","StyledButton","button","_templateObject4","memo","props","react_default","a","createElement","noValidate","onSubmit","preventDefault","type","placeholder","onChange","onInputChange","onKeyPress","onInputKeyPress","required","onClick","onButtonClick","className","SentinelDiv","Sentinel_templateObject","Sentinel","useRef","isIntersecting","ref","fadein","keyframes","List_templateObject","ListWrapper","List_templateObject2","Card","List_templateObject3","_ref$data","item","key","AppContainer","App_templateObject","AppHeader","App_templateObject2","ItemCounter","App_templateObject3","ErrorMsg","App_templateObject4","_useInputValue","_useSearch","_useDataLoader","injectedSearchQuery","components_SearchInput","event","components_List","components_Sentinel","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1a5926c1.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useObserver = ({ target, onIntersect }) => {\n  useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect);\n    if (!target) return;\n\n    observer.observe(target.current);\n\n    return () => {\n      observer.unobserve(target.current);\n    };\n  });\n};\n\nexport const useDataLoader = () => {\n  const [data, setData] = useState([]);\n  const [counter, setCounter] = useState(0);\n\n  return {\n    data,\n    loadInitial: n => {\n      if (n === \"\" || n === null) return;\n      const list = [...Array(n)].map((_, index) => index);\n      setCounter(list.length);\n      setData(list);\n    },\n    loadMore: n => {\n      const list = [...Array(n)].map((_, index) => counter + index);\n      setCounter(list.length + counter);\n      setData([...data, ...list]);\n    }\n  };\n};\n\nexport const useSearch = () => {\n  const [query, setQuery] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [clearSearch, setClearSearch] = useState(false);\n\n  return {\n    query,\n    searchQuery: q => {\n      if (\n        isNaN(q) ||\n        (q.includes(\".\") && parseFloat(q) > Math.floor(parseFloat(q)))\n      ) {\n        // enforce integer only\n        setErrorMessage(\"Input must be a whole, non-zero integer\");\n        setQuery(null);\n      } else if (parseInt(q) <= 0) {\n        // enforce greater than 0\n        setErrorMessage(\"Input must be a positive non-zero integer\");\n        setQuery(null);\n      } else {\n        const searchFlag = parseInt(q) !== parseInt(query);\n        setErrorMessage(null);\n        setClearSearch(searchFlag);\n        setQuery(parseInt(q));\n      }\n    },\n    clearSearch,\n    errorMessage\n  };\n};\n\nexport const useInputValue = (initialValue = \"\") => {\n  const [inputValue, setInputValue] = useState(initialValue);\n\n  return {\n    inputValue,\n    changeInput: e => {\n      setInputValue(e.target.value);\n    },\n    keyInput: (e, callback) => {\n      if (e.which === 13 || e.keyCode === 13) {\n        callback(inputValue);\n        return true;\n      }\n      return false;\n    }\n  };\n};\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchInputWrapper = styled.div`\n  padding: 1.5em 0 1em 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  box-sizing: border-box;\n  border: 1px solid #dfe1e5;\n  border-radius: 8px;\n  height: 2em;\n  width: 50%;\n  background-color: #eee;\n  transition: all 0.25s ease-out;\n  &:hover {\n    box-shadow: 0 1px 6px 0 rgba(32, 33, 36, 0.28);\n    border-color: rgba(223, 225, 229, 0);\n  }\n  &:focus-within {\n    background-color: #fff;\n    border-color: #dfe1e5;\n  }\n  @media (max-width: 767px) {\n    width: 300px;\n  }\n`;\n\nconst StyledInput = styled.input`\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  flex-grow: 2;\n  padding: 0 1em 0 1em;\n  border: none\n  font-size: 0.75em;\n  background: none;\n  transition: all 0.25s ease-out;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StyledButton = styled.button`\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  color: #444;\n  &:focus {\n    outline: inherit;\n  }\n`;\n\nfunction SearchInput(props) {\n  return (\n    <SearchInputWrapper>\n      <StyledForm noValidate onSubmit={e => e.preventDefault()}>\n        <StyledInput\n          type=\"text\"\n          placeholder=\"enter a whole number\"\n          value={props.inputValue}\n          onChange={props.onInputChange}\n          onKeyPress={props.onInputKeyPress}\n          required\n        />\n        <StyledButton onClick={props.onButtonClick}>\n          <i className=\"fa fa-search fa-2x\" />\n        </StyledButton>\n      </StyledForm>\n    </SearchInputWrapper>\n  );\n}\n\nexport default memo(SearchInput);\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useObserver } from \"../custom-hooks\";\n\nconst SentinelDiv = styled.div`\n  width: 100%;\n  height: 3em;\n  background: transparent;\n`;\n\nfunction Sentinel(props) {\n  const target = useRef();\n  useObserver({\n    target,\n    // argument destructures IntersectionObserverEntry.isIntersecting\n    onIntersect: ([{ isIntersecting }]) => {\n      if (isIntersecting) {\n        props.callback();\n      }\n    }\n  });\n\n  return <SentinelDiv ref={target} />;\n}\n\nexport default Sentinel;\n","import React, { memo } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst fadein = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst ListWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  background-color: inherit;\n  padding: 1em 1em 0 1em;\n`;\n\nconst Card = styled.div`\n  opacity: 0;\n  animation: ${fadein} 1s ease 0.2s 1 forwards;\n  text-align: center;\n  box-sizing: border-box;\n  border-radius: 4px;\n  margin: 0.5em;\n  height: 100px;\n  flex-basis: 100%;\n`;\n\nfunction List({ data = [] }) {\n  return (\n    <ListWrapper>\n      {data.map((item, index) => (\n        <Card key={item}>{`item ${item}`}</Card>\n      ))}\n    </ListWrapper>\n  );\n}\n\nexport default memo(List);\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { useInputValue, useSearch, useDataLoader } from \"./custom-hooks\";\nimport SearchInput from \"./components/SearchInput\";\nimport Sentinel from \"./components/Sentinel\";\nimport List from \"./components/List\";\n\nconst AppContainer = styled.div`\n  font-family: Avenir;\n  font-size: 1.25rem;\n  padding-top: 1em;\n  height: 100vh;\n  background-color: #fafafa;\n`;\n\nconst AppHeader = styled.div`\n  text-align: center;\n  width: 100%;\n`;\n\nconst ItemCounter = styled.div`\n  text-align: center;\n  color: #0b6e4f;\n  position: fixed;\n  border: 1px solid #eee;\n  line-height: 1em;\n  margin-left: 1em;\n  padding: 1em;\n  top: 1em;\n  font-size: 0.75em;\n`;\n\nconst ErrorMsg = styled.div`\n  text-align: center;\n  color: #904e55;\n`;\n\n/**\n * Basic container holding configuration for infinite scroll\n */\nfunction App() {\n  const { inputValue, changeInput, keyInput } = useInputValue();\n  const { errorMessage, query, searchQuery } = useSearch();\n  const { data, loadInitial, loadMore } = useDataLoader();\n  const injectedSearchQuery = () => {\n    searchQuery(inputValue);\n    loadInitial(query);\n  };\n  return (\n    <AppContainer>\n      <AppHeader>Enter the number of elements to render per batch</AppHeader>\n      <ItemCounter>Number of items rendered so far: {data.length}</ItemCounter>\n\n      <SearchInput\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={injectedSearchQuery}\n        onInputKeyPress={event => keyInput(event, injectedSearchQuery)}\n      />\n      {errorMessage ? (\n        <ErrorMsg>Error: {errorMessage}</ErrorMsg>\n      ) : (\n        <List data={data} />\n      )}\n      {query && <Sentinel callback={() => loadMore(query)} />}\n    </AppContainer>\n  );\n}\n\nexport default memo(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}